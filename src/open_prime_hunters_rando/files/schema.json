{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
        "starting_items": {
            "type": "object",
            "properties": {
                "weapons": {
                    "type": "string",
                    "default": "00000101",
                    "description": "String of bits that determines what weapons to start with.\nLeft to Right: Shock Coil, Magmaul, Judicator, Imperialist, Battlehammer, Missile, Volt Driver, Power Beam"
                },
                "missiles": {
                    "type": "integer",
                    "default": 5,
                    "description": "The number of missiles to start with."
                },
                "ammo": {
                    "type": "integer",
                    "default": 40,
                    "description": "The amount of UA to start with."
                },
                "energy": {
                    "type": "integer",
                    "default": 100,
                    "description": "The amount of energy to start with. In game, starting energy is this value minus 1."
                }
            },
            "required": [
                "weapons",
                "missiles"
            ]
        },
        "areas": {
            "type": "object",
            "properties": {
                "Celestial Archives": {
                    "$ref": "#/$defs/area"
                },
                "Alinos": {
                    "$ref": "#/$defs/area"
                },
                "Arcterra": {
                    "$ref": "#/$defs/area"
                },
                "Vesper Defense Outpost": {
                    "$ref": "#/$defs/area"
                },
                "Oubliette": {
                    "$ref": "#/$defs/area"
                }
            },
            "default": {},
            "additionalProperties": false
        }
    },
    "required": [
        "starting_items",
        "areas"
    ],
    "$defs": {
        "area": {
            "type": "object",
            "properties": {
                "levels": {
                    "type": "object",
                    "patternProperties": {
                        ".*": {
                            "$ref": "#/$defs/level"
                        }
                    }
                }
            },
            "required": [
                "levels"
            ],
            "additionalProperties": false
        },
        "level": {
            "type": "object",
            "properties": {
                "pickups": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "entity_id": {
                                "type": "integer",
                                "description": "The id of the entity."
                            },
                            "entity_type": {
                                "type": "integer",
                                "enum": [
                                    4,
                                    17
                                ],
                                "description": "The entity type of the entity.\nItemSpawn: 4, Artifact: 17"
                            }
                        },
                        "required": [
                            "entity_id",
                            "entity_type"
                        ],
                        "if": {
                            "properties": {
                                "entity_type": {
                                    "const": 4
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "item_type": {
                                    "type": "integer",
                                    "description": "The item type to change the entity into.",
                                    "minimum": 0,
                                    "maximum": 22

                                }
                            },
                            "required": [
                                "item_type"
                            ]
                        },
                        "else": {
                            "properties": {
                                "model_id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 8,
                                    "description": "The id of the model to use for the artifact."
                                },
                                "artifact_id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 7,
                                    "description": "The id of the artifact."
                                }
                            },
                            "required": [
                                "model_id",
                                "artifact_id"
                            ]
                        }
                    },
                    "default": []
                },
                "force_fields": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "entity_id": {
                                "type": "integer",
                                "description": "The id of the entity."
                            },
                            "type": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 9,
                                "description": "The type of force field. Sealed force fields can only be unlocked remotely.\nPower Beam, Volt Driver, Missile, Battlehammer, Imperialist, Judicator, Magmaul, Shock Coil, Omega Cannon, Sealed."
                            }
                        }
                    },
                    "required": [
                        "entity_id",
                        "weapon_type"
                    ],
                    "default": []
                },
                "portals": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "entity_id": {
                                "type": "integer",
                                "description": "The id of the entity."
                            },
                            "target_index": {
                                "type": "integer",
                                "description": "The load index of the target portal."
                            },
                            "entity_filename": {
                                "type": "string",
                                "description": "The entity file of the target portal."
                            }
                        }
                    },
                    "required": [
                        "entity_id",
                        "target_index",
                        "entity_filename"
                    ],
                    "default": []
                }
            }
        }
    }
}